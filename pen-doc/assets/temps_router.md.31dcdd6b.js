import{_ as s,c as a,o as n,a as l}from"./app.12811cf7.js";const i=JSON.parse('{"title":"路由","description":"","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"基础路由","slug":"基础路由","link":"#基础路由","children":[]},{"level":2,"title":"单路由","slug":"单路由","link":"#单路由","children":[]},{"level":2,"title":"路由组","slug":"路由组","link":"#路由组","children":[]},{"level":2,"title":"添加路由中间件","slug":"添加路由中间件","link":"#添加路由中间件","children":[]},{"level":2,"title":"添加多个路由中间件","slug":"添加多个路由中间件","link":"#添加多个路由中间件","children":[]},{"level":2,"title":"自定义路由中间件","slug":"自定义路由中间件","link":"#自定义路由中间件","children":[]}],"relativePath":"temps/router.md"}'),p={name:"temps/router.md"},o=l(`<h1 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-hidden="true">#</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h2><p>在pen框架中，使用的是自封装单文件路由，使用方式简单，功能强大.</p><p><a href="https://github.com/rr13k/pen-tmpl/blob/api/internal/app/toolkit/router/router.go" target="_blank" rel="noreferrer">router源码-&gt;</a></p><h2 id="基础路由" tabindex="-1">基础路由 <a class="header-anchor" href="#基础路由" aria-hidden="true">#</a></h2><pre><code>实现一个最简单的路由
</code></pre><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ping.go</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">handler</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">net/http</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Ping</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseWriter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	data </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#82AAFF;">byte</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pong</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// apiControl.go</span></span>
<span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ping</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Init</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>需要注意的一点是路由采用预注册模式，路由注册需要在<code>router.Init()</code>前进行</p><p>项目启动后，可以进行测试访问，正常情况输出如下</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 默认端口为8867</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> curl http://127.0.0.1:</span><span style="color:#F78C6C;">8867</span><span style="color:#A6ACCD;">/ping</span></span>
<span class="line"><span style="color:#FFCB6B;">pong</span></span>
<span class="line"></span></code></pre></div><h2 id="单路由" tabindex="-1">单路由 <a class="header-anchor" href="#单路由" aria-hidden="true">#</a></h2><pre><code>单路由注册
</code></pre><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ping</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="路由组" tabindex="-1">路由组 <a class="header-anchor" href="#路由组" aria-hidden="true">#</a></h2><pre><code>路由组注册
</code></pre><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UrlGroup</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUserList</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/find</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="添加路由中间件" tabindex="-1">添加路由中间件 <a class="header-anchor" href="#添加路由中间件" aria-hidden="true">#</a></h2><pre><code>在对路由组添加中间件时会对每个子路由生效
</code></pre><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UrlGroup</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUserList</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/find</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckLogin</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ping</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckLogin</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="添加多个路由中间件" tabindex="-1">添加多个路由中间件 <a class="header-anchor" href="#添加多个路由中间件" aria-hidden="true">#</a></h2><p>可以对路由添加多个路由中间件，例如添加<code>a、b、c</code>三个中间件，他们的执行顺序为 <code>a-&gt;b-&gt;c</code></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UrlGroup</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUserList</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/find</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GetUser</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckLogin</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckGlod</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/ping</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ping</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckLogin</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Use</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmw</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CheckGlod</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义路由中间件" tabindex="-1">自定义路由中间件 <a class="header-anchor" href="#自定义路由中间件" aria-hidden="true">#</a></h2><p>在<code>pen</code>中我们可以很容易实现一个路由中间件，</p><p>只需要实现<code>func(http.ResponseWriter, *http.Request)</code>即可</p><p>例如在实现一个最简单的路由中间件, 针对每个请求都打印相同内容</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DemoCmw</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseWriter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在一些特别的场景中，我们需要在中间件中进行请求的拦截, 我们可以使用<code>router.SetBreak(r)</code>来进行中断。 中断后，后续的中间件将不会在执行。</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BreakRouter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ResponseWriter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	url </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://jd.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	http</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Redirect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">302</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 中断路由</span></span>
<span class="line"><span style="color:#A6ACCD;">	router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetBreak</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,30),e=[o];function t(r,c,D,F,y,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
